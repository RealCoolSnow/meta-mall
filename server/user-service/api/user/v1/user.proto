syntax = "proto3";

package api.user.v1;

option go_package = "user-service/api/user/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.v1";

import "google/api/annotations.proto";
// https://github.com/envoyproxy/protoc-gen-validate
import "validate/validate.proto";

service UserService {
	rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
		option (google.api.http) = {
			post: "/v1/user"
			body: "*"
		};
	}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
		option (google.api.http) = {
			put: "/v1/user/{id}"
			body: "*"
		};
	}
	rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
		option (google.api.http) = {
			delete: "/v1/user/{id}"
		};
	}
	rpc GetUser (GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			get: "/v1/user/{id}"
		};
	}
	rpc ListUser (ListUserRequest) returns (ListUserReply) {
		option (google.api.http) = {
			get: "/v1/user"
		};
	}
}

message User {
	int64 id = 1;
	int32 group_id = 2;
	string username = 3;
	string password = 4;
	string mobile = 5;
	string email = 6;
}

message CreateUserRequest {
	int32 group_id = 1;
	string username = 2 [(validate.rules).string = {min_len: 5, max_len: 128}];
	string password = 3 [(validate.rules).string = {min_len: 6, max_len: 18}];
	string mobile = 4 [(validate.rules).string = {min_len: 6, max_len: 18}];
	string email = 5 [(validate.rules).string = {min_len: 3, max_len: 128}];
}

message CreateUserReply {
	int64 id = 1;
}

message UpdateUserRequest {
	int64 id = 1 [(validate.rules).int64 = {gt: 0}];
	CreateUserRequest data = 2;
}

message UpdateUserReply {
	int64 id = 1;
}

message DeleteUserRequest {
	int64 id = 1;
}

message DeleteUserReply {}

message GetUserRequest {
	int64 id = 1;
}

message GetUserReply {
	CreateUserRequest data = 1;
}

message ListUserRequest {}

message ListUserReply {
	repeated CreateUserRequest results = 1;
}